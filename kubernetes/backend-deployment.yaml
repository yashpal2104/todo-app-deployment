apiVersion: apps/v1
kind: Deployment
metadata:
  # Specific name for the backend deployment
  name: todo-backend-deployment
spec:
  replicas: 1
  selector:
    # This selector finds the pods that this deployment manages.
    matchLabels:
      app: todo-backend
  template:
    metadata:
      # Pods created by this deployment will get this label.
      labels:
        app: todo-backend
    spec:
      containers:
      - name: todo-backend-container
        # The Docker image for your Go backend application.
        image: docker0y4sh/todo-backend:latest
        imagePullPolicy: Always
        
        # --- The 'env' section for the database can be added in future ---
        
        ports:
        # The port your Go Gin application listens on.
        - containerPort: 8080
        
        # --- Health Checks for the Go Application ---
        # It's good practice to keep these. Your Go app should have a
        # simple /health endpoint that just returns a 200 OK status.
        readinessProbe:
          httpGet:
            path: /api/health # You should create this simple endpoint in Go
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
            
        # --- Resource allocation for the Go backend ---
        # The resource requests can be lower now since there is no database connection pool.
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"